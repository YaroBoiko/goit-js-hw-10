{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate = null;\nlet timerId = null;\n\nconst startBtn = document.querySelector(\"[data-start]\");\nconst datePicker = document.querySelector(\"#datetime-picker\");\n\nconst daysSpan = document.querySelector(\"[data-days]\");\nconst hoursSpan = document.querySelector(\"[data-hours]\");\nconst minutesSpan = document.querySelector(\"[data-minutes]\");\nconst secondsSpan = document.querySelector(\"[data-seconds]\");\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(datePicker, options);\n\nstartBtn.addEventListener(\"click\", () => {\n  timerId = setInterval(() => {\n    const diff = userSelectedDate - new Date();\n      if (diff <= 0) {\n        startBtn.disabled = true;\ndatePicker.disabled = false;\n      clearInterval(timerId);\n      updateTimer(0);\n      return;\n    }\n    updateTimer(diff);\n  }, 1000);\n\n  startBtn.disabled = true;\n  datePicker.disabled = true;\n});\n\nfunction updateTimer(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n  daysSpan.textContent = addLeadingZero(days);\n  hoursSpan.textContent = addLeadingZero(hours);\n  minutesSpan.textContent = addLeadingZero(minutes);\n  secondsSpan.textContent = addLeadingZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, \"0\");\n}\n"],"names":["userSelectedDate","timerId","startBtn","datePicker","daysSpan","hoursSpan","minutesSpan","secondsSpan","options","selectedDates","iziToast","flatpickr","diff","updateTimer","ms","days","hours","minutes","seconds","convertMs","addLeadingZero","value"],"mappings":"+IAMA,IAAIA,EAAmB,KACnBC,EAAU,KAEd,MAAMC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAa,SAAS,cAAc,kBAAkB,EAEtDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3DL,EAAS,SAAW,GAEpB,MAAMM,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBT,EAAmBS,EAAc,CAAC,EAC9BT,GAAoB,IAAI,MAC1BU,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDR,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,CACH,EAEAS,EAAUR,EAAYK,CAAO,EAE7BN,EAAS,iBAAiB,QAAS,IAAM,CACvCD,EAAU,YAAY,IAAM,CAC1B,MAAMW,EAAOZ,EAAmB,IAAI,KAClC,GAAIY,GAAQ,EAAG,CACbV,EAAS,SAAW,GAC5BC,EAAW,SAAW,GAChB,cAAcF,CAAO,EACrBY,EAAY,CAAC,EACb,MACD,CACDA,EAAYD,CAAI,CACjB,EAAE,GAAI,EAEPV,EAAS,SAAW,GACpBC,EAAW,SAAW,EACxB,CAAC,EAED,SAASU,EAAYC,EAAI,CACvB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EACtDV,EAAS,YAAcgB,EAAeL,CAAI,EAC1CV,EAAU,YAAce,EAAeJ,CAAK,EAC5CV,EAAY,YAAcc,EAAeH,CAAO,EAChDV,EAAY,YAAca,EAAeF,CAAO,CAClD,CAEA,SAASC,EAAUL,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}